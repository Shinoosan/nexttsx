datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  telegramId            String    @unique
  username              String?
  firstName             String
  lastName              String?
  photoUrl              String?
  languageCode          String?   @default("en")
  isPremium             Boolean   @default(false)
  isBot                 Boolean   @default(false)
  allowsWriteToPm       Boolean   @default(false)
  
  // Stats
  cardsProcessed        Int       @default(0)
  liveCards             Int       @default(0)
  deadCards             Int       @default(0)
  
  // Settings
  settings              Settings?
  
  // Timestamps
  createdAt             DateTime  @default(now())
  lastLoginAt           DateTime  @updatedAt
  
  // Relations
  processedCards        ProcessedCard[]
  proxy           Proxy?
  @@map("users")
}

model Settings {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                String    @unique @db.ObjectId
  user                  User      @relation(fields: [userId], references: [id])
  
  // Preferences
  theme                 String    @default("light")
  language              String    @default("en")
  notifications         Boolean   @default(true)
  autoProcess           Boolean   @default(false)
  defaultGate           String    @default("stripe")
  
  // Timestamps
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("settings")
}

model ProcessedCard {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                String    @db.ObjectId
  user                  User      @relation(fields: [userId], references: [id])
  
  // Card Details
  cardNumber            String
  status                String    @default("pending") // pending, live, dead
  gate                  String
  response              String?
  
  // Timestamps
  processedAt           DateTime  @default(now())

  @@index([userId, status])
  @@map("processed_cards")
}


model GlobalStats {
  id                    String    @id @default("global") @map("_id")  // Added @map("_id")
  totalCardsProcessed   Int       @default(0)
  totalLiveCards        Int       @default(0)
  totalDeadCards        Int       @default(0)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("global_stats")
}

// schema.prisma
model Proxy {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  value     String
  isActive  Boolean  @default(true)
  lastUsed  DateTime @updatedAt
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@map("proxies")
}

// Optional: Add this if you want to track API usage
model ApiUsage {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                String    @unique @db.ObjectId
  dailyRequests         Int       @default(0)
  monthlyRequests       Int       @default(0)
  lastReset             DateTime  @default(now())

  @@map("api_usage")
}
